#####################################################################
#	Macros
#####################################################################

[include klicky-probe.cfg]
[include nozzle_scrub.cfg]

#####################################################################
#	Power
#####################################################################

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="Printer",
                             state="off")}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

#####################################################################
#	Filament sensor
#####################################################################

#[gcode_macro filament_sensor_enable]
#gcode:
#  SET_FILAMENT_SENSOR SENSOR=<sensor_name> ENABLE=1

#[gcode_macro filament_sensor_disable]
#gcode:
#  SET_FILAMENT_SENSOR SENSOR=<sensor_name> ENABLE=0

[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

#####################################################################
#	Github Backups
##################################################################### 

[gcode_shell_command backup_cfg]
command: bash /home/pi/klipper_config/autocommit.sh
timeout: 320.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

#####################################################################
#	Input Shaper
#####################################################################

[gcode_macro generate_graphs]
gcode:
  RUN_SHELL_COMMAND CMD=generate_graphs

[gcode_shell_command graph_resonance]
command: sh /home/pi/klipper_config/graph_resonance.sh
timeout: 320.
verbose: True

[gcode_shell_command generate_graphs]
command: sh /home/pi/klipper_config/generate_graphs.sh
timeout: 320.
verbose: True

[gcode_macro graph_resonance]
gcode:
  RUN_SHELL_COMMAND CMD=graph_resonance

[gcode_macro test_x]
gcode:
    TEST_RESONANCES AXIS=X

[gcode_macro test_y]
gcode:
    TEST_RESONANCES AXIS=y

[gcode_macro measure_sensor_noise]
gcode:
    MEASURE_AXES_NOISE

[gcode_macro query_accelerometer]
gcode:
    ACCELEROMETER_QUERY

[gcode_macro measure_resonance]
gcode:
    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data

[gcode_macro IS_autotune]
gcode:
    SHAPER_CALIBRATE

#####################################################################
#	Homing and levelling
#####################################################################
   
# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED = params.BED|default(110)|int %}
    {% set EXTRUDER = params.EXTRUDER |default(245)| int %}
    #{% set BED = params.BED|default(60)|int %}
    #{% set EXTRUDER = params.EXTRUDER|default(215)|int %}
   BED_MESH_CLEAR
   #BED_MESH_PROFILE LOAD=default
   #emergency_lights_off
   set_nozzle_leds_on
   #case_lights_on
   OVERHEAD_ON                       ;Turn white led caselights on
   G90
   G28
   M117 Warmup
   SET_FAN_SPEED FAN=BedFans SPEED=0.4 ;turn on bedfans
   SET_FAN_SPEED FAN=filter_fan SPEED=1
   #SET_FAN_SPEED FAN=fiter_fan SPEED=0.4 ;turn on bedfans
   M190 S{BED}                        ; set bed temp and wait for it reach temp
   #M104 S{EXTRUDER*0.80}               ; start preheating hotend to non-ooze temperature prior to homing and mesh
   #Attach_Probe_Lock
   Z_TILT_ADJUST
   M109 S{EXTRUDER*0.80}               ; wait for hotend to stabilize at pre-heat temp   non-ooze temperature prior to homing and mesh 0.9 stock
   #Dock_Probe_Unlock
   BED_MESH_CALIBRATE
   CLEAN_NOZZLE
   G28 Z 
   CALIBRATE_Z
   G0 X5 Y5 F6000
   M109 S{EXTRUDER|int}               ; M109 heat and wait for it to reach temp
   G1 E20 F1000       ;reload filament from print end 20mm retract
   M117 Purging
   PURGE_LINE
   SET_FAN_SPEED FAN=exhaust_fan SPEED=0.25    ;start exhaust fan
   SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
   M117 Starting Print

[gcode_macro PURGE_LINE]
gcode:  
    G92 E0
    G90
    G0 X5 Y5 F6000
    ###M117 Heating extruder...
    #M109 S{EXTRUDER}                    ; set final hotend temperature and wait for it to be reached
    #M117 Purging...
    G0 Z0.3
    G91
    G1 X80 E19 F1200
    G1 Y1
    G1 X-40 E19 F1200
    G1 E-.5 F3000                  ; retract slightly to try and reduce stringing
    G92 E0
    G90


[gcode_macro PURGE_BUCKET]
gcode:
    #lights_on
    SAVE_GCODE_STATE NAME=PURGE
    CG28
    G90                    ; absolute
    G0 X295 Y300 Z5 F6000       ; go to purge bucket  (removed Z5)
    G1 X255 E30 F1500        ; purge some filament into bucket
    G1 X295 E30 F1500        ; purge some filament into bucket
    G1 E-110 F500            ; Retract a little reset for print start
    G0 X205 Y300 F8000      ; move across purge brush
	G0 X295 Y300 F8000     ; move across purge brush
	G0 X205 Y300 F8000      ; move across purge brush
    G1 E-10 F3600            ; Retract a little
    G1 Z5                  ; Raise and return
    RESTORE_GCODE_STATE NAME=PURGE
    #SET_LED LED=tool_light RED=1.0 GREEN=1.0 BLUE=1.0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20 F1500                 ; retract filament
    M106 S255                      ;cool nozzle
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X298 Y300 F3600            ; park nozzle at rear
    G4 P30000                     ; dwell 30 seconds to let nozzle ooz
    M107                           ;turn PC fan off
    M117 Print Complete
    M84                            ; turn steppers off
    ;G4 P 600000                    ; Wait 10 mins
    BED_MESH_CLEAR
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    ;SET_FAN_SPEED FAN=exhaust_fan SPEED=0   ;shutdown exhaust fan

#####################################################################
#	Heatsoak
#####################################################################

[gcode_macro HEATSOAK_60]
description: A macro that allows configuration of a heatsoak.

variable_soakminutes: 60                                        # Total duration of heatsoak in minutes.

### Below section is for those with a chamber recirculation fan ###

variable_chamber_fan_enable: False                              # Enables usage of a chamber circulation fan. Default is False.
variable_chamber_fan: 'Nevermore'                               # Name of chamber circulation fan, if you have one. (Nevermore / Bed Fans)
variable_chamber_fan_slow: 0.5                                  # Chamber fan speed to not overpower the bed.
variable_chamber_fan_fast: 1.0                                  # Chamber fan speed when bed is hot enough to keep up.

gcode: 
    {% set BED_TEMP = params.BED_TEMP|default(110)|int %}               # 
    CG28                                                  # Check if printer axes are homed, and home if they are not
    M117 Heatsoak starting...                                           # 
    CASE_LIGHTS_RED  #SET CASE LIGHTS RED
    G90                                                                 # Use Absolute coordinates
    G0 X 150 Y 150 Z 122                                                 # Center bed and print head relative to entire printer volume
    M117 Warming bed to {BED_TEMP}                                      # 
    M106 S255                                                           # Set part cooling fan(s) to 100%
    M18                                                                 # Power off motors to reduce noise
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_slow|float}  # Set chamber fan slower to not overpower the bed
    {% endif %}                                                         # 
    M190 S{BED_TEMP}                                                    # Wait for bed temperature
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_fast|float}  # Set chamber fan faster to circulate hot air
    {% endif %}                                                         # 
                                                                        # 
    {% for x in range(soakminutes|int) %}                               # 
        M117 {soakminutes - x} min remaining                            # Display the remaining soak time in minutes
        G4 P60000                                                       # 
    {% endfor %}                                                        # 
                                                                        # 
    M117 Heatsoak complete!                                             # Display completion message
    #SET_LED_EFFECT EFFECT=critical_error #DAS BLINKEN LIGHTS
    M107                                                                # Turn off part cooling fans
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_slow|float}  # Set chamber fan to ending power
    {% endif %}                                                         #

[gcode_macro HEATSOAK_20]
description: A macro that allows configuration of a heatsoak.

variable_soakminutes: 20                                        # Total duration of heatsoak in minutes.

### Below section is for those with a chamber recirculation fan ###

variable_chamber_fan_enable: False                              # Enables usage of a chamber circulation fan. Default is False.
variable_chamber_fan: 'Nevermore'                               # Name of chamber circulation fan, if you have one. (Nevermore / Bed Fans)
variable_chamber_fan_slow: 0.5                                  # Chamber fan speed to not overpower the bed.
variable_chamber_fan_fast: 1.0                                  # Chamber fan speed when bed is hot enough to keep up.

gcode: 
    {% set BED_TEMP = params.BED_TEMP|default(110)|int %}               # 
    CG28                                                  # Check if printer axes are homed, and home if they are not
    #SET_FAN_SPEED FAN=BedFans SPEED=0.4 ;turn on bedfans
    SET_FAN_SPEED FAN=filter_fan SPEED=1
    M117 Heatsoak starting...                                           # 
    CASE_LIGHTS_RED  #SET CASE LIGHTS RED
    G90                                                                 # Use Absolute coordinates
    G0 X 150 Y 150 Z 122                                                 # Center bed and print head relative to entire printer volume
    M117 Warming bed to {BED_TEMP}                                      # 
    M106 S255                                                           # Set part cooling fan(s) to 100%
    M18                                                                 # Power off motors to reduce noise
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_slow|float}  # Set chamber fan slower to not overpower the bed
    {% endif %}                                                         # 
    M190 S{BED_TEMP}                                                    # Wait for bed temperature
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_fast|float}  # Set chamber fan faster to circulate hot air
    {% endif %}                                                         # 
                                                                        # 
    {% for x in range(soakminutes|int) %}                               # 
        M117 {soakminutes - x} min remaining                            # Display the remaining soak time in minutes
        G4 P60000                                                       # 
    {% endfor %}                                                        # 
                                                                        # 
    M117 Heatsoak complete!                                             # Display completion message
    SET_LED_EFFECT EFFECT=critical_error #DAS BLINKEN LIGHTS
    M107                                                                # Turn off part cooling fans
    {% if chamber_fan_enable == True %}                                 # 
        SET_FAN_SPEED FAN={chamber_fan} SPEED={chamber_fan_slow|float}  # Set chamber fan to ending power
    {% endif %}   #

#####################################################################
#	Exclude Object
#####################################################################

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

#####################################################################
#	Filament Handling
#####################################################################

[gcode_macro unload_filament_abs]
gcode:
    lights_on
    G90                    ; absolute
    CG28                     ;home all
    G0 X295 Y300 Z5 F6000    ;move to purge bucket
    M117 Warmup 
    M109 S245               ; wait for temp
    M83  ; set extruder to relative
    M117 Unloading Filament
    G1 E-120 F3000            ;get that shit outta there
    clean_nozzle
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    M117 Filament Unloaded

[gcode_macro unload_filament_pla]
gcode:
    lights_on
    G90                    ; absolute
    CG28                     ;home all
    G0 X295 Y300 Z5 F6000    ;move to purge bucket
    M117 Warmup 
    M109 S200               ; wait for temp
    M83  ; set extruder to relative
    M117 Unloading Filament
    G1 E-120 F3000            ;get that shit outta there
    clean_nozzle
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    M117 Filament Unloaded

[gcode_macro load_filament_abs]
gcode:
    #lights_on
    G90                    ; absolute
    CG28                     ;home all if not already
    G0 X295 Y300 Z5 F6000    ;move to purge bucket
    M117 Warmup 
    M109 S245               ; wait for temp
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    M83  ; set extruder to relative
    M117 Loading Filament
    G1 E 50 F300            ;
    G1 E 50 F300            ;
    #G1 E 30  F150
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    G1 E-15 F1500          ; Retract a little
    M104 S0                 ; hotend 0
    M106 S255               ; part fan high to cool quickly
    G4 P30000                     ; dwell 30 seconds to let nozzle ooz and cool
    clean_nozzle
    M117 Filament Loaded
    #SET_LED_EFFECT EFFECT=critical_error stop=1   ; get my attention

[gcode_macro load_filament_pla]
gcode:
    lights_on
    G90                    ; absolute
    CG28                     ;home all if not already
    G0 X295 Y300 Z5 F6000    ;move to purge bucket
    M117 Warmup 
    M109 S200               ; wait for temp
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    M83  ; set extruder to relative
    M117 Loading Filament
    G1 E 110 F300            ;get that shit outta there
    G1 E 30  F150
    #SET_LED_EFFECT EFFECT=critical_error    ; get my attention
    G1 E-2 F500            ; Retract a little
    clean_nozzle
    M117 Filament Loaded
    #SET_LED_EFFECT EFFECT=critical_error stop=1   ; get my attention

[gcode_macro FORM_TIP]
description: Helper: Round the filament tip
gcode:
  G92 E0   ; zero the extruder
  M83      ; relative extrusion
  G1 E2 F100
  G1 E-2
  G1 E4
  G1 E-4
  G1 E10
  G1 E-15

#####################################################################
#	Nozzle
#####################################################################

[gcode_macro change_nozzle]
gcode:
   OVERHEAD_ON
   G90
   CG28
   M109 S260
   G1 E-20 F3600
   CLEAN_NOZZLE
   G0 Z200 X150 y0 f6000  ;move to no nozzle change position
                  ; wait for temp
   SET_LED_EFFECT EFFECT=critical_error    ; get my attention

[gcode_macro wipe_nozzle]
gcode:
   CG28
   CLEAN_NOZZLE

#####################################################################
#	Pause/Resume/M600
#####################################################################

[gcode_macro M600]
gcode:
    
    PAUSE                ; Pause

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
#####################################################################
#	Audio lol
#####################################################################
[gcode_macro M300]
gcode:  
  {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
  {% set P = params.P|default(100)|int %} ; P sets the tone duration
  {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
  {% if S <= 0 %} ; dont divide through zero
  {% set F = 1 %}
  {% set L = 0 %}
  {% elif S >= 10000 %} ;max frequency set to 10kHz
  {% set F = 0 %}
  {% else %}
  {% set F = 1/S %} ;convert frequency to seconds 
  {% endif %}
  SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
  G4 P{P} ;tone duration
  SET_PIN PIN=BEEPER_Pin VALUE=0

#####################################################################
#	Fans/Exhaust
#####################################################################
[gcode_macro vent_chamber]
gcode:
   SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0    ;fan 100% vent chamber

[gcode_macro exhaust_off]
gcode:
   SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0    ;turn off exhaust fan

[gcode_macro exhaust_low]
gcode:
   SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2    ;turn off exhaust fan

#####################################################################
#	Positioning
#####################################################################

[gcode_macro CENTER]
gcode:
    G90                        ; absolute positioning
    G0 Z25 F3600               ; move nozzle up
    G0 X150 Y150 F6000


[gcode_macro FRONT]
gcode:
    G90                        ; absolute positioning
    G0 Z25 F3600               ; move nozzle up
    G0 X150 Y40 F6000


[gcode_macro REAR]
gcode:
    G90                        ; absolute positioning
    G0 Z25 F3600               ; move nozzle up
    G0 X150 Y290 F6000
#####################################################################
#	Maint./Tuning
#####################################################################

[gcode_macro Pid_bed]
gcode:
    CG28                                ;home printer if not already
    SET_FAN_SPEED FAN=BedFans SPEED=0.4 ;turn on bedfans
    CENTER                              ;center nozzle over bed
    M106 S255                           ; Set part cooling fan(s) to 100%
    G0 Z125                             ;Move Z down to middle
    PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro Pid_hotend]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=245


[gcode_macro Belt_Tension]
description: A macro that assists with repeatable belt tensioning.

variable_y_tensioning_position: 115       #Position the printhead needs to be to have 150mm of belt length exposed for belt tensioning.

gcode:
    {% set x_max = printer.configfile.settings.stepper_x.position_max %}
    {% set travel_speed = printer.configfile.settings.printer.max_velocity %}

    G0 X{x_max/2} Y{y_tensioning_position} F{travel_speed*60}
    { action_respond_info( "Tension A/B belts to 110hz @ X: {}, Y: {}".format(x_max/2, y_tensioning_position) ) }

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED