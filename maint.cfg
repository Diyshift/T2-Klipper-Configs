[gcode_macro _MAINTENANCE_CONFIG]
variable_max_print_hours:        200                   # change this to the print hours limit before maintenance 
gcode:


[gcode_macro _ALERT_CHECK]
description: 
gcode:
    {% set option = params.MODE|default(0)|int %}
    {% set svv = printer.save_variables.variables %}
    {% if option == 0 %}                                                  # called from MAINTENANCE_RESET
        {% if svv.maint_hr_counter == 0 %}                                     # Check if counter was reset
              # Display success message to CONSOLE
              {action_respond_info("MAINTENANCE TIMER HAS BEEN RESET TO %.2f HOURS."|format(svv.maint_hr_counter))}
        {% else %}                                                        # Reset wasn't successful for some reason
              # Display error message to CONSOLE
              {action_respond_info("ERROR: UNABLE TO RESET MAINTENANCE TIMER.  Check your variables.cfg to make sure data is correct.")}
        {% endif %} 
    {% elif option == 1 %}                                                # called from ADD_MAINTENANCE_TIMER
        {% if svv.maint_hr_counter > svv.maint_hr_max %}                           # Check if max hours is exceeded.        
            # Display exceeded warning to CONSOLE
            {action_respond_info("TIME FOR MAINTENANCE.  YOU HAVE %.2f PRINT HOURS."|format(svv.maint_hr_counter))}
        {% endif %}
    {% endif %}

[gcode_macro MAINTENANCE_RESET]
description: sets max hours and resets hour counter
gcode:
    SAVE_VARIABLE VARIABLE=maint_hr_counter VALUE=0            # Reset print hours counter before displaying reminder
    SAVE_VARIABLE VARIABLE=maint_hr_max VALUE={printer["gcode_macro _MAINTENANCE_CONFIG"].max_print_hours}
    _ALERT_CHECK                                               # need to do this because the variable value doesn't update immediately for some reason

[gcode_macro MAINTENANCE_TIME]
description: displays current print hours since last maintenance
gcode:
    {% set svv = printer.save_variables.variables %}
    {action_respond_info("CURRENTLY HAVE %.2f HOURS SINCE LAST MAINTENANCE.  YOUR MAX HOURS IS: %.2f"|format(svv.maint_hr_counter, svv.maint_hr_max))}

[gcode_macro _ADD_MAINTENANCE_TIMER]
description: updates the hourcounter variable with the recently completed print.  call this in your print_end.
gcode:
   {% set svv = printer.save_variables.variables %}
      # Convert total_duration to hours
   {% set total_hours = ((printer.print_stats.total_duration/3600)|round(2,'common')) %}
   # Check if there is even a value (for cases where cancelled/failed print doesn't produce one). If not, do nothing.
   {% if total_hours > 0 %}
        SAVE_VARIABLE VARIABLE=maint_hr_counter VALUE={svv.maint_hr_counter + total_hours}
        # Call macro to check if hour counter exceeds max
        _ALERT_CHECK MODE=1     
   {% endif %}